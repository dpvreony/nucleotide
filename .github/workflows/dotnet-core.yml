name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    env:
      solutionpath: src\Dhgms.Nucleotide.sln
      unittestprojectpath: src\Dhgms.Nucleotide\Dhgms.Nucleotide.csproj
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@c26a08ba26249b81327e26f6ef381897b6a8754d
    - name: Build
      run: .\build.ps1
      shell: powershell
      
# only store binlog on failure      
    - name: store binlogs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: binlogs
        path: artifacts/binlog
        
    - name: store docfx
      uses: actions/upload-artifact@v2
      with:
        name: docfx
        path: artifacts/docfx
        
    - name: store nuget packages
      uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: artifacts/nuget
        
    - name: store omd
      uses: actions/upload-artifact@v2
      with:
        name: omd
        path: artifacts/omd
        
    - name: store outdated
      uses: actions/upload-artifact@v2
      with:
        name: outdated
        path: artifacts/outdated
        
    - name: store snitch
      uses: actions/upload-artifact@v2
      with:
        name: snitch
        path: artifacts/snitch

  release:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Download NuGet Packages
      uses: actions/download-artifact@v2
      with:
        name: nuget

    - name: Changelog
      uses: glennawatson/ChangeLog@v1
      id: changelog

    - name: Create Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ needs.build.outputs.nbgv }}
          release_name: ${{ needs.build.outputs.nbgv }}
          body: |
            ${{ steps.changelog.outputs.commitLog }}

    - name: NuGet Push
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
        SOURCE_URL: https://api.nuget.org/v3/index.json
      run: |
        dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} **/*.nupkg