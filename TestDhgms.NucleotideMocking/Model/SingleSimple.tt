<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="c:\program files\dhgms solutions\libs\Dhgms.Nucleotide.dll" #>
// --------------------------------------------------------------------------------------------------------------------
// <copyright file="SingleSimple.cs" company="DHGMS Solutions">
//   2004-2012 DHGMS Solutions. Some Rights Reserved.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------
<#

Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[] properties = new Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[]
{
	new Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32(
		Dhgms.Nucleotide.Model.Info.CollectionType.None,
		"Id",
		"Unique Id",
		false,
		null,
		null
		),
	new Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString(
		Dhgms.Nucleotide.Model.Info.CollectionType.None,
		"Name",
		"Name",
		false,
		null,
		null
		)
};

Dhgms.Nucleotide.Model.Helper.Information information = new Dhgms.Nucleotide.Model.Helper.Information();
Dhgms.Nucleotide.Model.Helper.Difference difference = new Dhgms.Nucleotide.Model.Helper.Difference();
Dhgms.Nucleotide.Model.Helper.SearchFilter searchFilter = new Dhgms.Nucleotide.Model.Helper.SearchFilter();
Dhgms.Nucleotide.Model.Helper.ViewFilter viewFilter = new Dhgms.Nucleotide.Model.Helper.ViewFilter();

string mainNamespace = "TestDhgms.NucleotideMocking";
string className = "SingleSimple";
string comment = "Represents a class containing properties that are simple";
#>
<#=information.Generate(
	mainNamespace,
	null,
	className,
	comment,
	properties,
	null,
	null
	)
#>
<#=searchFilter.Generate(
	mainNamespace,
	null,
	className,
	comment,
	properties,
	null,
	null
	)
#>
<#=viewFilter.Generate(
	mainNamespace,
	null,
	className,
	comment,
	properties,
	null,
	null
	)
#>
<#=difference.Generate(
	mainNamespace,
	null,
	className,
	comment,
	properties,
	null,
	null
	)
#>
