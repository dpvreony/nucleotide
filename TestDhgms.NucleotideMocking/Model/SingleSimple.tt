<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="$(SolutionDir)\bin\debug\Dhgms.Nucleotide.dll" #>
<#@ import namespace="Dhgms.Nucleotide.Model.Info" #>
<#@ import namespace="Dhgms.Nucleotide.Model.Info.PropertyInfo" #>
<#@ import namespace="System.Security.Cryptography.X509Certificates" #>
// --------------------------------------------------------------------------------------------------------------------
// <copyright file="SingleSimple.cs" company="DHGMS Solutions">
//   2004-2012 DHGMS Solutions. Some Rights Reserved.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------
<#

var information = new Dhgms.Nucleotide.Model.Helper.Information();
var difference = new Dhgms.Nucleotide.Model.Helper.Difference();
//Dhgms.Nucleotide.Model.Helper.SearchFilter searchFilter = new Dhgms.Nucleotide.Model.Helper.SearchFilter();
//Dhgms.Nucleotide.Model.Helper.ViewFilter viewFilter = new Dhgms.Nucleotide.Model.Helper.ViewFilter();

var cgp = new Cgp();
#>
<#=information.Generate(cgp)
#>
<#=difference.Generate(cgp)
#>
<#+

    public class Cgp : ClassGenerationParameters
    {
        public override string MainNamespaceName
        {
            get
            {
                return "TestDhgms.NucleotideMocking";
            }
        }

        public override string SubNamespace
        {
            get
            {
                return null;
            }
        }

        public override string ClassName
        {
            get
            {
                return "SingleSimple";
            }
        }

        public override Base[] Properties
        {
            get
            {
                return new Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[]
                {
                    new Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32(
                        Dhgms.Nucleotide.Model.Info.CollectionType.None,
                        "Id",
                        "Unique Id",
                        false,
                        null,
                        null,
                        true,
                        null
                        ),
                    new Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString(
                        Dhgms.Nucleotide.Model.Info.CollectionType.None,
                        "Name",
                        "Name",
                        false,
                        null,
                        null,
                        false,
                        false,
                        null
                        )
                };
            }
        }

        public override Base[] BaseClassProperties
        {
            get
            {
                return null;
            }
        }

        public override string CompanyName
        {
            get
            {
                return "DHGMS Solutions";
            }
        }

        public override string[] CopyrightBanner
        {
            get
            {
                return new[] { "bleh" };
            }
        }

        public override int CopyrightStartYear
        {
            get
            {
                return 2008;
            }
        }

        public override string BaseClassName
        {
            get
            {
                return null;
            }
        }

        public override string ClassRemarks
        {
            get
            {
                return "Represents a class containing properties that are simple";
            }
        }
    }
#>